{"version":3,"sources":["components/Header.js","components/Action.js","components/AddOption.js","components/Option.js","components/Options.js","components/OptionModal.js","components/IndecisionApp.js","serviceWorker.js","index.js"],"names":["Header","props","title","subTitle","subtitle","react_default","a","createElement","className","defaultProps","Action","disabled","hasOptions","onClick","pickOption","AddOption","state","error","undefined","handleAddOption","e","preventDefault","option","target","elements","value","trim","_this","addOption","setState","this","onSubmit","type","name","React","Component","Option","optionText","count","deleteOption","Options","options","length","deleteOptions","map","index","components_Option","key","OptionModal","lib_default","isOpen","selectedOption","onRequestClose","resetPickOption","contentLabel","closeTimeoutMS","IndecisionApp","prevState","filter","element","Math","floor","random","indexOf","concat","json","localStorage","getItem","JSON","parse","prevProps","stringify","setItem","console","log","components_Header","components_Action","components_Options","AddOption_AddOption","components_OptionModal","Boolean","window","location","hostname","match","ReactDOM","render","IndecisionApp_IndecisionApp","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f3e62662.chunk.js","sourcesContent":["import React from \"react\";\n\n// Stateless Component\n\nconst Header = props => {\n  const title = props.title;\n  const subTitle = props.subtitle;\n  return (\n    <div className=\"header\">\n      <div className=\"container\">\n        <h1 className=\"header__title\">{title}</h1>\n        {props.subtitle && <h2 className=\"header__subtitle\">{subTitle}</h2>}\n      </div>\n    </div>\n  );\n};\n\nHeader.defaultProps = {\n  title: \"Indecision\"\n};\n\nexport default Header;\n","import React from \"react\";\n\nconst Action = props => {\n  return (\n    <div>\n      <button\n        disabled={!props.hasOptions}\n        onClick={props.pickOption}\n        className=\"btn btn--big\"\n      >\n        What Should I Do?\n      </button>\n    </div>\n  );\n};\n\nexport default Action;\n","import React from \"react\";\n\nexport default class AddOption extends React.Component {\n  state = {\n    error: undefined\n  };\n  /* \n    Without the experimental feature, allows -> functions\n    constructor(props) {\n    super(props);\n    this.handleAddOption = this.handleAddOption.bind(this);\n    this.state = {\n      error: undefined\n    };\n  } \n  \n  */\n\n  // arrow function, see more: .babelrc - \"plugins\": [\"transform-class-properties\"]\n  handleAddOption = e => {\n    e.preventDefault();\n    const option = e.target.elements.option.value.trim();\n\n    const error = this.props.addOption(option);\n\n    this.setState(() => ({ error: error }));\n\n    if (!error) {\n      e.target.elements.option.value = \"\";\n    }\n  };\n  render() {\n    return (\n      <div className=\"add-option\">\n        {this.state.error && (\n          <p className=\"add-option--error\">{this.state.error}</p>\n        )}\n        <form onSubmit={this.handleAddOption} className=\"add-option__form\">\n          <input\n            type=\"text\"\n            name=\"option\"\n            className=\"add-option__form__input\"\n          />\n          <button className=\"btn add-option__form__btn\">Add Option</button>\n        </form>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\n\nconst Option = props => {\n  const option = props.optionText;\n  const count = props.count;\n  return (\n    <li className=\"option\">\n      <p className=\"option__text\">\n        {count}. {option}\n      </p>\n      <button\n        onClick={() => {\n          props.deleteOption(option);\n        }}\n        className=\"btn btn--link\"\n      >\n        Remove\n      </button>\n    </li>\n  );\n};\n\nexport default Option;\n","import React from \"react\";\n\nimport Option from \"./Option\";\n\nconst Options = props => {\n  const options = props.options;\n  return (\n    <div>\n      <div className=\"widget-header\">\n        <h3>Your Options</h3>\n        {props.options.length > 0 && (\n          <button onClick={props.deleteOptions} className=\"btn btn--link\">\n            Remove All\n          </button>\n        )}\n      </div>\n      {props.options.length == 0 && (\n        <p className=\"message\">Add an option to your list</p>\n      )}\n      <ol>\n        {options.map((option, index) => {\n          return (\n            <Option\n              key={index}\n              deleteOption={props.deleteOption}\n              optionText={option}\n              count={index + 1}\n            />\n          );\n        })}\n      </ol>\n    </div>\n  );\n};\n\nexport default Options;\n","import React from \"react\";\nimport Modal from \"react-modal\";\n\nconst OptionModal = props => {\n  return (\n    <Modal\n      isOpen={!!props.selectedOption}\n      // allows close by clicking outside\n      onRequestClose={props.resetPickOption}\n      contentLabel=\"Selected Option\"\n      closeTimeoutMS={200}\n      className=\"modal\"\n    >\n      <h3 className=\"modal__title\">Selected Option</h3>\n      {props.selectedOption && (\n        <p className=\"modal__body\">{props.selectedOption}</p>\n      )}\n      <button onClick={props.resetPickOption} className=\"btn modal__btn\">\n        Close\n      </button>\n    </Modal>\n  );\n};\n\nexport default OptionModal;\n","import React from \"react\";\n\nimport Header from \"./Header\";\nimport Action from \"./Action\";\nimport AddOption from \"./AddOption\";\nimport Options from \"./Options\";\nimport OptionModal from \"./OptionModal\";\n\nexport default class IndecisionApp extends React.Component {\n  state = {\n    options: [],\n    selectedOption: undefined\n  };\n  // Legacy code\n  // constructor(props) {\n  //   super(props);\n  //   this.deleteOptions = this.deleteOptions.bind(this);\n  //   this.pickOption = this.pickOption.bind(this);\n  //   this.addOption = this.addOption.bind(this);\n  //   this.deleteOption = this.deleteOption.bind(this);\n  //   this.state = {\n  //     options: []\n  //   };\n  // }\n\n  componentDidMount() {\n    try {\n      const json = localStorage.getItem(\"options\");\n      const options = JSON.parse(json);\n\n      if (options) {\n        this.setState(() => ({ options: options }));\n      }\n    } catch (e) {}\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.options !== this.state.options) {\n      const json = JSON.stringify(this.state.options);\n      localStorage.setItem(\"options\", json);\n    }\n  }\n\n  componentWillUnmount() {\n    console.log(\"Component will unmount\");\n  }\n\n  deleteOptions = () => {\n    this.setState(() => ({ options: [] }));\n  };\n\n  deleteOption = option => {\n    this.setState(prevState => ({\n      options: prevState.options.filter(element => element != option)\n    }));\n  };\n\n  pickOption = () => {\n    const option = this.state.options[\n      Math.floor(Math.random() * this.state.options.length)\n    ];\n    this.setState(() => ({\n      selectedOption: option\n    }));\n  };\n\n  resetPickOption = () => {\n    this.setState(() => ({\n      selectedOption: undefined\n    }));\n  };\n\n  addOption = option => {\n    if (!option) {\n      return \"Enter a valid value to add option\";\n    } else if (this.state.options.indexOf(option) > -1) {\n      return \"This option already exists\";\n    }\n\n    this.setState(prevState => ({ options: prevState.options.concat(option) }));\n  };\n\n  render() {\n    const appSubTitle = \"Put your life into the hands of a react app\";\n\n    return (\n      <div className=\"indecision-app\">\n        <Header subtitle={appSubTitle} />\n        <div className=\"container\">\n          <Action\n            hasOptions={this.state.options.length > 0}\n            pickOption={this.pickOption}\n          />\n          <div className=\"widget\">\n            <Options\n              options={this.state.options}\n              deleteOptions={this.deleteOptions}\n              deleteOption={this.deleteOption}\n            />\n            <AddOption addOption={this.addOption} />\n          </div>\n        </div>\n        <OptionModal\n          selectedOption={this.state.selectedOption}\n          resetPickOption={this.resetPickOption}\n        />\n      </div>\n    );\n  }\n}\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport IndecisionApp from \"./components/IndecisionApp\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<IndecisionApp />, document.getElementById(\"app\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}